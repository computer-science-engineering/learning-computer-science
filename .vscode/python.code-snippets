{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"Solution": {
		"scope": "python",
		"prefix": "cse: solution",
		"body": [
			"class Solution:",
			"\tdef method(self):",
			"\t\t",
			"def main():",
			"\tsolution = Solution()",
			"",
			"if __name__ == '__main__':",
			"\tmain()"
		]
	},
	"TestSolution": {
		"scope": "python",
		"prefix": "cse: test_solution",
		"body": [
			"import solution",
			"import unittest",
			"",
			"class TrivialCase(unittest.TestCase):",
			"\t\tdef test_trivial_case_1(self):",
			"\t\t\t\t\"\"\"\"trivial case 1\"\"\"",
			"\t\t\t\texpected = ",
			"\t\t\t\tsol = solution.Solution()",
			"\t\t\t\tactual = sol.",
			"\t\t\t\tself.assertEqual(expected, actual)",
			"",
			"if __name__ == \"__main__\":",
			"\t\tunittest.main()"
		]
	}
}